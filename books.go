package orthocal

import (
	"regexp"
	"strings"
)

var BookNames = map[string]string{
	// Old Testament
	"gen":             "Gen",
	"genesis":         "Gen",
	"exod":            "Exod",
	"exodus":          "Exod",
	"lev":             "Lev",
	"leviticus":       "Lev",
	"num":             "Num",
	"numbers":         "Num",
	"deut":            "Deut",
	"deuteronomy":     "Deut",
	"josh":            "Josh",
	"joshua":          "Josh",
	"judges":          "Judg",
	"judg":            "Judg",
	"ruth":            "Ruth",
	"1 kgs":           "1Sam",
	"1 kings":         "1Sam",
	"2 kgs":           "2Sam",
	"2 kings":         "2Sam",
	"3 kgs":           "1Kgs",
	"3 kings":         "1Kgs",
	"4 kgs":           "2Kgs",
	"4 kings":         "2Kgs",
	"1 chr":           "1Chr",
	"1 chronicles":    "1Chr",
	"2 chr":           "2Chr",
	"2 chronicles":    "2Chr",
	"ezra":            "Ezra",
	"neh":             "Neh",
	"nehemiah":        "Neh",
	"esth":            "Esth",
	"esther":          "Esth",
	"job":             "Job",
	"ps":              "Ps",
	"psalm":           "Ps",
	"psalms":          "Ps",
	"prov":            "Prov",
	"proverbs":        "Prov",
	"eccl":            "Eccl",
	"ecclesiastes":    "Eccl",
	"song":            "Song",
	"song of solomon": "Song",
	"song of songs":   "Song",
	"isa":             "Isa",
	"isaiah":          "Isa",
	"jer":             "Jer",
	"jeremiah":        "Jer",
	"hos":             "Hos",
	"hosea":           "Hos",
	"joel":            "Joel",
	"amos":            "Amos",
	"obad":            "Obad",
	"obadiah":         "Obad",
	"jonah":           "Jonah",
	"jon":             "Jonah",
	"mic":             "Mic",
	"micah":           "Mic",
	"nah":             "Nah",
	"nahum":           "Nah",
	"hab":             "Hab",
	"habakkuk":        "Hab",
	"zech":            "Zech",
	"zechariah":       "Zech",
	"hag":             "Hag",
	"hagai":           "Hag",
	"lam":             "Lam",
	"lamentations":    "Lam",
	"ezek":            "Ezek",
	"ezekiel":         "Ezek",
	"dan":             "Dan",
	"daniel":          "Dan",
	"zeph":            "Zeph",
	"zephaniah":       "Zeph",
	"mal":             "Mal",
	"malachi":         "Mal",

	// New Testament
	"matt":            "Matt",
	"matthew":         "Matt",
	"mt":              "Matt",
	"mark":            "Mark",
	"mk":              "Mark",
	"luke":            "Luke",
	"john":            "John",
	"jn":              "John",
	"acts":            "Acts",
	"rom":             "Rom",
	"1 cor":           "1Cor",
	"1 corinthians":   "1Cor",
	"2 cor":           "2Cor",
	"2 corinthians":   "2Cor",
	"1 thess":         "1Thess",
	"1 thessalonians": "1Thess",
	"2 thess":         "2Thess",
	"2 thessalonians": "2Thess",
	"gal":             "Gal",
	"galatians":       "Gal",
	"eph":             "Eph",
	"ephesians":       "Eph",
	"phil":            "Phil",
	"philippians":     "Phil",
	"col":             "Col",
	"colosians":       "Col",
	"1 tim":           "1Tim",
	"1 timothy":       "1Tim",
	"2 tim":           "2Tim",
	"2 timothy":       "2Tim",
	"1 john":          "1John",
	"2 john":          "2John",
	"3 john":          "3John",
	"1 pet":           "1Pet",
	"1 peter":         "1Pet",
	"2 pet":           "2Pet",
	"2 peter":         "2Pet",
	"heb":             "Heb",
	"hebrews":         "Heb",
	"titus":           "Titus",
	"philemon":        "Phlm",
	"phlm":            "Phlm",
	"jas":             "Jas",
	"james":           "Jas",
	"jude":            "Jude",
	"rev":             "Rev",
	"revelation":      "Rev",
}

func NormalizeBookName(name string) string {
	name = regexp.MustCompile(`\s+`).ReplaceAllLiteralString(name, " ")
	name = strings.Replace(name, ".", "", -1)
	name = strings.Trim(name, " ")
	name = strings.ToLower(name)
	if normalized, ok := BookNames[name]; ok {
		return normalized
	} else {
		return ""
	}
}
